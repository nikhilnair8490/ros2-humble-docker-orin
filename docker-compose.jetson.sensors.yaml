# This file is used to run the container with docker-compose on Jetson Orin Nano (arm64)
# You can run the container with the following command:
# docker compose -f docker-compose.jetson.sensors.yaml -d (to run the container in the background)
# docker compose -f docker-compose.jetson.sensors.yaml exec abaja_ros_dev bash (to enter the container)
# docker compose -f docker-compose.jetson.sensors.yaml down (to stop and delete the container)

services: # Services to run
  abaja_ros_dev:   # Service name
    image: ros_humble_jetson # Image name
    user: ros_jetson # User to run the container
    network_mode: host # Network mode
    ipc: host # IPC mode
    privileged: true # Required for some hardware access on Jetson
    runtime: nvidia # Enable NVIDIA Container Toolkit for GPU access
    volumes: # Volumes to mount
      # - "jetson_ros_ws/install: /home/ros/docker_ros_ws/install" # Mount src directory
      #- "/tmp/.X11-unix:/tmp/.X11-unix:rw" # Mount X11 socket for display
      #- "/usr/lib/aarch64-linux-gnu:/usr/lib/aarch64-linux-gnu:ro" # (Optional) Mounts essential libraries from the Jetpack system into the container
      #- "/usr/lib/udev:/usr/lib/udev:ro" # (Optional) `udev` is the device manager in Linux. Mounting `/usr/lib/udev` can be necessary for proper device detection and access within the container, especially for hardware like cameras, sensors, and USB devices connected to the Jetson.
      - "/dev:/dev" # (Optional, but often needed) The `/dev` directory contains device files that represent hardware devices. Mounting `/dev` gives the container direct access to these device files e.g CAN bus, serial ports, etc.
    #environment:     # Environment variables
      #DISPLAY: ${DISPLAY} # Pass DISPLAY environment variable
    # launch ros package
    #command: bash -c "source /home/ros/docker_ros_ws/install/setup.bash" # && ros2 run cpp_pubsub talker" # && tail -f /dev/null   # Keep the container running in background
    # command : ros2 run cpp_pubsub talker # && tail -f /dev/null
    command: tail -f /dev/null