// generated from rosidl_adapter/resource/msg.idl.em
// with input from radar_msgs/msg/RadarTrack.msg
// generated code does not contain a copyright notice

#include "geometry_msgs/msg/Point.idl"
#include "geometry_msgs/msg/Vector3.idl"
#include "unique_identifier_msgs/msg/UUID.idl"

module radar_msgs {
  module msg {
    typedef float float__6[6];
    module RadarTrack_Constants {
      @verbatim (language="comment", text=
        "Object classifications (Additional vendor-specific classifications are permitted starting from 32000 e.g. Car)")
      const uint16 NO_CLASSIFICATION = 0;
      const uint16 STATIC = 1;
      const uint16 DYNAMIC = 2;
    };
    @verbatim (language="comment", text=
      "This message relates only to FMCW radar." "\n"
      "All variables below are relative to the radar's frame of reference." "\n"
      "This message is not meant to be used alone but as part of a stamped or array message.")
    struct RadarTrack {
      @verbatim (language="comment", text=
        "A unique ID of the object generated by the radar." "\n"
        "Note: The z component of these fields is ignored for 2D tracking.")
      unique_identifier_msgs::msg::UUID uuid;

      @verbatim (language="comment", text=
        "x, y, z coordinates of the centroid of the object being tracked.")
      geometry_msgs::msg::Point position;

      @verbatim (language="comment", text=
        "The velocity of the object in each spatial dimension.")
      geometry_msgs::msg::Vector3 velocity;

      @verbatim (language="comment", text=
        "The acceleration of the object in each spatial dimension.")
      geometry_msgs::msg::Vector3 acceleration;

      @verbatim (language="comment", text=
        "The object size in the sensor frame." "\n"
        "For example length, width, and height," "\n"
        "or the diameter of an ellipsoid in the x, y, z, dimensions.")
      geometry_msgs::msg::Vector3 size;

      @verbatim (language="comment", text=
        "An optional classification of the object (see above).")
      uint16 classification;

      @verbatim (language="comment", text=
        "Upper-triangle covariance about the x, y, z axes.")
      float__6 position_covariance;

      @verbatim (language="comment", text=
        "Upper-triangle covariance about the x, y, z axes.")
      float__6 velocity_covariance;

      @verbatim (language="comment", text=
        "Upper-triangle covariance about the x, y, z axes.")
      float__6 acceleration_covariance;

      @verbatim (language="comment", text=
        "Upper-triangle covariance about the x, y, z axes.")
      float__6 size_covariance;
    };
  };
};
